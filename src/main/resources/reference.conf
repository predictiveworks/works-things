#
# The configuration for the Akka actor support
#
actor = {
    #
    # Timeout in seconds
    #
    timeout = 5
    #
    # Parameters to control the handling of failed child actors:
    # it is the number of retries within a certain time window.
    #
    # The supervisor strategy restarts a child up to 10 restarts
    # per minute. The child actor is stopped if the restart count
    # exceeds maxRetries during the withinTimeRange duration.
    #
    maxRetries = 10
    #
    # Time range in minutes
    #
    timeRange = 1
    #
    # Child actors are defined leveraging a RoundRobin pool with a
    # dynamic resizer. The boundaries of the resizer are defined
    # below
    #
    lower = 2
    upper = 100
    #
    # The number of instances for the RoundRobin pool
    #
    instances = 50
}
#
# The HTTP binding for the ThingsBoard connector
#
binding = {
    host = "127.0.0.1"
    port = 9090
}
#
# Configuration of the access to the European Air pollution
# datasets; these datasets are recreated every 30 minutes
# and contains 48 hours of data.
#
climate = {
    country = "AT"
    #
    # The list of supported pollutants, that are supported
    # by the selected country. Note, this differs from country
    # to country.
    #
    pollutants = ["CO", "NO", "NO2", "O3", "PM10", "PM2.5", "SO2"]
    #
    # The server url of the air pollution server
    #
    serverUrl = "https://discomap.eea.europa.eu/map/fme/latest"
}
#
# The security configuration for SSL/TLS the Akka-based
# Http(s) server
#
security = {
    #
    # The default configuration for subscription
    # requests does not support SSL/TLS. Set this
    # value to "true" to enable encryption
    #
    ssl = "false"
    #
    # The path to the keystore file
    #
    ksFile = ""
    #
    # The keystore type
    #
    ksType = ""
    #
    # The keystore password
    #
    ksPass = ""
    #
    # The keystore algorithm
    #
    ksAlgo = ""
    #
    # The path to the truststore file
    #
    tsFile = ""
    #
    # The truststore type
    #
    tsType = ""
    #
    # The truststore password
    #
    tsPass = ""
    #
    # The truststore algorithm
    #
    tsAlgo = ""
    #
    # The path to the certificate file of the
    # Certificate authority
    #
    caCertFile = ""
    #
    # The path to the certificate file
    #
    certFile = ""
    #
    # The path to the private key file
    #
    privateKeyFile = ""
    #
    # The password for the private key file
    #
    privateKeyFilePass = ""
}
#
# The configuration for the ThingsBoard MQTT producer
#
thingsboard = {
    #
    # The url of the ThingsBoard broker
    #
    mqttUrl = "tcp://192.168.178.58:1883"
    #
    # The unique client identifier used to connect to
    # the Mosquitto server
    #
    clientId = "HutUndStiel"
    #
    # The quality of service
    #
    # 0: QoS for at most once delivery according to the
    #    capabilities of the underlying network.
    #
    #    AT_MOST_ONCE
    #
    # 1: QoS for ensuring at least once delivery.
    #
    #    AT_LEAST_ONCE
    #
    # 2: QoS for ensuring exactly once delivery.
    #
    #    EXACTLY_ONCE
    #
    mqttQoS = 1
    #
    # The version of the MQTT protocol: Either MQTT v3.1 (3) or v3.1.1 (4)
    #
    mqttVersion = 3
    #
    # Keep alive interval for the Mqtt connection.
    #
    keepAlive = 120
    #
    # The connection timeout for the Mqtt connection
    #
    timeout = 120
}
#
# The configuration for the ThingsNetwork MQTT consumer
#
thingsnetwork = {
    #
    # The url of the ThingsNetwork broker
    #
    # Alternative tcp://eu.thethings.network:1883
    #
    mqttUrl = "tcp://eu1.cloud.thethings.network:1883"
    #
    # The unique client identifier used to connect to
    # the Mosquitto server
    #
    clientId = "HutUndStiel"
    #
    # The MQTT user is the TTN application id
    #
    mqttUser = "hutundstiel@ttn"
    #
    # The MQTT password is the created API key within the
    # Things Stack console
    #
    mqttPass = "NNSXS.2NVC3BYIN7CRZL6XGEDBWWSLQVKCRSKTPX6HCAY.RNT23DQBO2Y6RF4PORWF5WSEOL5YK4L7BUGW5LKPWZEXJPVM7KWQ"
    #
    # The quality of service
    #
    # 0: QoS for at most once delivery according to the
    #    capabilities of the underlying network.
    #
    #    AT_MOST_ONCE
    #
    # 1: QoS for ensuring at least once delivery.
    #
    #    AT_LEAST_ONCE
    #
    # 2: QoS for ensuring exactly once delivery.
    #
    #    EXACTLY_ONCE
    #
    mqttQoS = 1
    #
    # The version of the MQTT protocol: Either MQTT v3.1 (3) or v3.1.1 (4)
    #
    mqttVersion = 3
    #
    # Keep alive interval for the Mqtt connection.
    #
    keepAlive = 120
    #
    # The connection timeout for the Mqtt connection
    #
    timeout = 120
}
#
# Configuration of the OpenWeatherAPI access
#
weather = {
    #
    # The current API key for OpenWeather
    #
    # FREE PLAN: 60 calls per minute and
    #            1,000, 000 per month
    #
    apiKey = "cdb2c748b67435fcd249486eb7f10b3a"
    #
    # The request interval to retrieve weather data;
    # supported values are 15m, 30m, 1h, 3h, 6h, 12h
    #
    interval = "15m"
    #
    # The weather locations that have to be monitored
    #
    locations = [
    {
        lat = 48.2043
       lon = 16.4545
       country = "AT"
       station = "Freudenau"
       #
       # ThingsBoard device token for this weather station
       #
       token = "YhQBRHxew8DBi2UoeVqf"
    },
    {
       lat = 48.2990
       lon = 16.2462
       country = "AT"
       station = "Gugging"
       #
       # ThingsBoard device token for this weather station
       #
       token = "t63bZq2K8FmaKAJ02HpE"
    }
    ]
    #
    # The base server url to access OpenWeather
    #
    serverUrl = "https://api.openweathermap.org/data/2.5/weather?"
}
