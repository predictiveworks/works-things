#
# The configuration for the Akka actor support
#
actor = {
    #
    # Timeout in seconds
    #
    timeout = 5
    #
    # Parameters to control the handling of failed child actors:
    # it is the number of retries within a certain time window.
    #
    # The supervisor strategy restarts a child up to 10 restarts
    # per minute. The child actor is stopped if the restart count
    # exceeds maxRetries during the withinTimeRange duration.
    #
    maxRetries = 10
    #
    # Time range in minutes
    #
    timeRange = 1
    #
    # Child actors are defined leveraging a RoundRobin pool with a
    # dynamic resizer. The boundaries of the resizer are defined
    # below
    #
    lower = 2
    upper = 100
    #
    # The number of instances for the RoundRobin pool
    #
    instances = 50
}
#
# The HTTP binding for the ThingsBoard connector
#
binding = {
    host = "127.0.0.1"
    port = 9090
}
#
# Configuration of the access to the European Air pollution
# datasets; these datasets are recreated every 30 minutes
# and contains 48 hours of data.
#
climate = {
    country = "AT"
    #
    # The folder where all the pollutant files of a certain
    # 30 min time window are stored
    #
    folder = "/Users/krusche/IdeaProjects/works-things/downloads/"
    #
    # The list of supported pollutants, that are supported
    # by the selected country. Note, this differs from country
    # to country.
    #
    pollutants = ["CO", "NO", "NO2", "O3", "PM10", "PM2.5", "SO2"]
    #
    # The server url of the air pollution server
    #
    serverUrl = "https://discomap.eea.europa.eu/map/fme/latest"
    #
    # The (local) station identifiers to select air quality
    # data from; this list is used as a filter to restrict
    # the managed amount of data
    #
    stations = [
         { id = "STA.09.A23",  name = "A23 Südosttangente", lon = 16.43455,           lat = 48.20305999946664 },
         { id = "STA.09.AKC",  name = "AKH",                lon = 16.349818,          lat = 48.219109999466674 },
         { id = "STA.09.BELG", name = "Belgradplatz",       lon = 16.3614172222222,   lat = 48.17435305502217 },
         { id = "STA.09.FLO",  name = "Floridsdorf",        lon = 16.396954,          lat = 48.261085999466765 },
         { id = "STA.09.GAUD", name = "Gaudenzdorf",        lon = 16.3393311111111,   lat = 48.18714694391101 },
         { id = "STA.09.JAEG", name = "Hermannskogel",      lon = 16.2972,            lat = 48.270199999466804 },
         { id = "STA.09.KE",   name = "Kaiser-Ebersdorf",   lon = 16.476050999999995, lat = 48.15670799946655 },
         { id = "STA.09.KEND", name = "Kendlerstraße",      lon = 16.30975,           lat = 48.20499999946665 },
         { id = "STA.09.LAA",  name = "Laaer Berg",         lon = 16.3929202777778,   lat = 48.161036388355456 },
         { id = "STA.09.LIES", name = "Liesing",            lon = 16.30127778,        lat = 48.1412499994665 },
         { id = "STA.09.LOB",  name = "Lobau",              lon = 16.525613888888902, lat = 48.16206944391096 },
         { id = "STA.09.MBA",  name = "Hietzinger Kai",     lon = 16.3000202777778,   lat = 48.188372499466624 },
         { id = "STA.09.SCHA", name = "Schafberg",          lon = 16.301563,          lat = 48.23536999946673 },
         { id = "STA.09.STAD", name = "Stadlau",            lon = 16.458344999999998, lat = 48.22636083279999 },
         { id = "STA.09.STEF", name = "Stephansplatz",      lon = 3732536111111,      lat = 48.20814999946664 },
         { id = "STA.09.TAB",  name = "Taborstraße",        lon = 16.3809180555556,   lat = 48.21673944391107 },
         { id = "STA.09.ZA",   name = "Hohe Warte",         lon = 16.357079,          lat = 48.24899299946675 }
    ]

}
#
# The configuration of the interval device repository
#
repository = {
    #
    # The file system folder, that holds the repository
    #
    folder = "/Users/krusche/IdeaProjects/works-things/devices/"
}
#
# The security configuration for SSL/TLS the Akka-based
# Http(s) server
#
security = {
    #
    # The default configuration for subscription
    # requests does not support SSL/TLS. Set this
    # value to "true" to enable encryption
    #
    ssl = "false"
    #
    # The path to the keystore file
    #
    ksFile = ""
    #
    # The keystore type
    #
    ksType = ""
    #
    # The keystore password
    #
    ksPass = ""
    #
    # The keystore algorithm
    #
    ksAlgo = ""
    #
    # The path to the truststore file
    #
    tsFile = ""
    #
    # The truststore type
    #
    tsType = ""
    #
    # The truststore password
    #
    tsPass = ""
    #
    # The truststore algorithm
    #
    tsAlgo = ""
    #
    # The path to the certificate file of the
    # Certificate authority
    #
    caCertFile = ""
    #
    # The path to the certificate file
    #
    certFile = ""
    #
    # The path to the private key file
    #
    privateKeyFile = ""
    #
    # The password for the private key file
    #
    privateKeyFilePass = ""
}
#
# The configuration for the ThingsBoard MQTT producer
#
thingsboard = {
    #
    # The url of the ThingsBoard broker
    #
    mqttUrl = "tcp://192.168.178.58:1883"
    #
    # The unique client identifier used to connect to
    # the Mosquitto server
    #
    clientId = "HutUndStiel"
    #
    # The quality of service
    #
    # 0: QoS for at most once delivery according to the
    #    capabilities of the underlying network.
    #
    #    AT_MOST_ONCE
    #
    # 1: QoS for ensuring at least once delivery.
    #
    #    AT_LEAST_ONCE
    #
    # 2: QoS for ensuring exactly once delivery.
    #
    #    EXACTLY_ONCE
    #
    mqttQoS = 1
    #
    # The version of the MQTT protocol: Either MQTT v3.1 (3) or v3.1.1 (4)
    #
    mqttVersion = 3
    #
    # Keep alive interval for the Mqtt connection.
    #
    keepAlive = 120
    #
    # The connection timeout for the Mqtt connection
    #
    timeout = 120
    #
    # This is the configuration of the REST API of ThingsBoard
    #
    admin = {
        #
        # The customer identifier the ThingsBoard
        # administrator is acting for
        #
        customerId = "470aa770-72f4-11ec-88cd-7183190f12d0"
        #
        # The base url of the ThingsBoard HTTP server
        #
        serverUrl = "http://192.168.178.58:8080"
        #
        # The user name of the tenant
        #
        username = "david@hutundstiel.at"
        #
        # The password of the tenant
        #
        userpass = ""
    }
    #
    # This is the configuration of the external access
    # to the ThingsBoard HTTP server via Things Server
    #
    mobile = {
        #
        # All mobile requests share a secret with the
        # Things Server, that must be provided as part
        # of the request
        #
        secret = "*"
    }
}
#
# The configuration for the ThingsNetwork MQTT consumer
#
thingsnetwork = {
    #
    # The url of the ThingsNetwork broker
    #
    # Alternative tcp://eu.thethings.network:1883
    #
    mqttUrl = "tcp://eu1.cloud.thethings.network:1883"
    #
    # The unique client identifier used to connect to
    # the Mosquitto server
    #
    clientId = "HutUndStiel"
    #
    # The MQTT user is the TTN application id
    #
    mqttUser = "hutundstiel@ttn"
    #
    # The MQTT password is the created API key within the
    # Things Stack console
    #
    mqttPass = "*"
    #
    # The quality of service
    #
    # 0: QoS for at most once delivery according to the
    #    capabilities of the underlying network.
    #
    #    AT_MOST_ONCE
    #
    # 1: QoS for ensuring at least once delivery.
    #
    #    AT_LEAST_ONCE
    #
    # 2: QoS for ensuring exactly once delivery.
    #
    #    EXACTLY_ONCE
    #
    mqttQoS = 1
    #
    # The version of the MQTT protocol: Either MQTT v3.1 (3) or v3.1.1 (4)
    #
    mqttVersion = 3
    #
    # Keep alive interval for the Mqtt connection.
    #
    keepAlive = 120
    #
    # The connection timeout for the Mqtt connection
    #
    timeout = 120
    #
    # This is the configuration of the REST API of The Things Stack
    #
    admin = {
        #
        # The application identifier for the REST API; note, this id
        # differs slightly from the MQTT API.
        #
        appId = "hutundstiel"
        #
        # The base url of the ThingsStack HTTP server
        #
        serverUrl = "https://eu1.cloud.thethings.network"
    }
}
#
# Configuration of the OpenWeatherAPI access
#
weather = {
    #
    # The current API key for OpenWeather
    #
    # FREE PLAN: 60 calls per minute and
    #            1,000, 000 per month
    #
    apiKey = ""
    #
    # The request interval to retrieve weather data;
    # supported values are 15m, 30m, 1h, 3h, 6h, 12h
    #
    interval = "15m"
    #
    # The weather stations that have to be monitored
    #
    stations = [
    {
       id = "STA.OWEA.AT.FREUDENAU"
       name = "Freudenau"
       lat = 48.2043
       lon = 16.4545
    },
    {
       id = "STA.OWEA.AT.GUGGING"
       name = ""Gugging""
       lat = 48.2990
       lon = 16.2462
    }
    ]
    #
    # The base server url to access OpenWeather
    #
    serverUrl = "https://api.openweathermap.org/data/2.5/weather?"
}
